<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Railway Crew Resource Hub</title>
  <script src="https://unpkg.com/vue@3"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js"></script>
  <script>
    window['pdfjs-dist/build/pdf'] = pdfjsLib;
    pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';
  </script>
  <script src="js/pdf-thumbnail.js"></script>
  <link href="https://fonts.googleapis.com/css?family=Inter:400,600,700&display=swap" rel="stylesheet" />
  <style>
    html, body {
      margin: 0; padding: 0; height: 100%;
      font-family: 'Inter', Arial, sans-serif;
      background: #f5f7fa;
      color: #28303d;
    }
    #app {
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }
    /* HEADER */
    header {
      background: linear-gradient(90deg, #388e3c 0%, #43a047 100%);
      color: white;
      padding: 1.1rem 1.5rem;
      font-size: 1.2rem;
      font-weight: 600;
      box-shadow: 0 2px 6px rgba(70,150,100,0.07);
      letter-spacing: 1px;
      display: flex;
      align-items: center;
      gap: 1rem;
      position: relative;
      z-index: 1201;
    }
    /* Burger menu icon */
    .burger-icon {
      width: 26px;
      height: 20px;
      cursor: pointer;
      display: none; /* hidden on desktop */
      flex-direction: column;
      justify-content: space-between;
    }
    .burger-icon div {
      height: 3.5px;
      background: white;
      border-radius: 2px;
    }
    /* Show burger icon only on small screens */
    @media (max-width: 799px) {
      .burger-icon {
        display: flex;
      }
    }
    /* MAIN layout */
    main {
      flex: 1;
      display: flex;
      overflow: hidden;
      background: #f5f7fa;
    }
    /* Sidebar for desktop */
    aside.sidebar-desktop {
      width: 240px;
      background: white;
      border-right: 1.5px solid #e4e4e4;
      padding: 1rem;
      overflow-y: auto;
      flex-shrink: 0;
      display: block;
    }
    @media (max-width: 799px) {
      aside.sidebar-desktop {
        display: none;
      }
    }
    aside h3 {
      margin-top: 0;
      font-size: 1rem;
      font-weight: 700;
      color: #388e3c;
      letter-spacing: 0.5px;
      margin-bottom: 0.7em;
    }
    aside ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    aside li {
      margin: 9px 0;
      padding: 8px 12px;
      border-radius: 7px;
      cursor: pointer;
      color: #28303d;
      font-size: 1rem;
      font-weight: 500;
      transition: background-color 0.12s;
      user-select: none;
    }
    aside li:hover,
    aside li.active {
      background: #e8f5e9;
      color: #2e7d32;
    }
    /* Section content */
    section.content-area {
      flex: 1;
      min-width: 0;
      padding: 0.6em 0.5em 2em 0.5em;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      position: relative;
    }
    /* Side menu tray for mobile */
    .mobile-side-tray {
      position: fixed;
      top: 0; left: 0;
      width: 55vw;
      max-width: 300px;
      height: 100vh;
      background: white;
      box-shadow: 3px 0 20px rgba(0,0,0,0.15);
      transform: translateX(-100%);
      transition: transform 0.3s ease;
      z-index: 1300;
      padding: 1rem;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
    }
    .mobile-side-tray.open {
      transform: translateX(0);
    }
    /* Mobile overlay behind tray */
    .mobile-overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100vw; height: 100vh;
      background: rgba(0,0,0,0.3);
      z-index: 1299;
    }
    /* Mobile side tray elements */
    .mobile-side-tray h3 {
      margin-top: 0;
      font-size: 1.2rem;
      font-weight: 700;
      color: #388e3c;
      border-bottom: 1px solid #ddd;
      padding-bottom: 0.5rem;
      user-select: none;
    }
    .mobile-side-tray ul {
      list-style: none;
      padding: 0;
      margin: 1rem 0 0 0;
    }
    .mobile-side-tray li {
      padding: 10px 10px;
      margin-bottom: 10px;
      cursor: pointer;
      border-radius: 8px;
      color: #28303d;
      font-size: 1.1rem;
      font-weight: 600;
      user-select: none;
      transition: background-color 0.15s;
    }
    .mobile-side-tray li.active {
      background: #2e7d32;
      color: white;
    }
    .mobile-side-tray li:hover:not(.active) {
      background: #e8f5e9;
      color: #2e7d32;
    }

    /* Modern search box and cards styles… (your existing styles, shortened here for brevity) */
    /* Place your existing .search-area, .enhanced-search, .card, .card-pdf, .card-audio, .card-video, .card-image, btn styles etc here as before */

    /* For demonstration simplicity, I will include the card colors and basic styling: */

    .search-area {
      width: 100%;
      margin-bottom: 2rem;
      margin-top: 1.2rem;
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .enhanced-search {
      width: 100%;
      max-width: 410px;
      background: #fff;
      border-radius: 25px;
      box-shadow: 0 2px 8px rgba(46,125,50,0.08);
      border: 2px solid #c8e6c9;
      display: flex;
      align-items: center;
      overflow: hidden;
      transition: box-shadow 0.2s, border 0.2s;
      padding-left: 10px;
    }
    .enhanced-search:focus-within {
      box-shadow: 0 4px 16px rgba(46,125,50,0.16);
      border-color: #2e7d32;
    }
    .enhanced-search input {
      border: none;
      outline: none;
      flex: 1;
      color: #28303d;
      background: transparent;
      font-size: 1.07em;
      padding: 14px 16px;
      font-family: inherit;
      transition: color 0.12s;
    }
    .enhanced-search input::placeholder {
      color: #a8b2bb;
    }

    .card {
      background: #fff;
      padding: 0.8rem 1.1rem;
      margin: 0 auto 1.2rem auto;
      border-radius: 18px;
      box-shadow: 0 2.5px 12px rgba(80,140,120,0.09);
      display: flex;
      align-items: center;
      gap: 19px;
      max-width: 650px;
      width: 97%;
      border: 1.2px solid #e0e0e0;
      transition: background 0.16s;
    }
    .card-pdf {
      background: #fff3e0;
      border-left: 5px solid #ff9800;
    }
    .card-audio {
      background: #fff9c4;
      border-left: 5px solid #fbc02d;
    }
    .card-video {
      background: #fce4ec;
      border-left: 5px solid #e91e63;
    }
    .card-image {
      background: #e3f2fd;
      border-left: 5px solid #0288d1;
    }
    .thumbnail-container {
      width: 74px;
      height: 74px;
      display: flex;
      align-items: center;
      justify-content: center;
      background: #ecf5ee;
      border-radius: 10px;
      overflow: hidden;
      border: 1px solid #e0e0e0;
      flex-shrink: 0;
    }
    .card img {
      width: 74px;
      height: 74px;
      object-fit: cover;
      border-radius: 9px;
    }
    .card-content {
      flex: 1;
      display: flex;
      flex-direction: column;
    }
    .card h4 {
      margin: 0 0 8px 0;
      font-size: 1.09rem;
      color: #1b3e20;
      font-weight: 600;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden;
      max-width: 200px;
      letter-spacing: 0.1px;
    }
    .actions {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
      margin-top: 4px;
    }
    .btn {
      padding: 9px 16px;
      border-radius: 7px;
      text-decoration: none;
      font-weight: 600;
      font-size: 13.7px;
      border: none;
      cursor: pointer;
      display: inline-flex;
      align-items: center;
      gap: 5px;
      letter-spacing: 0.05em;
      transition: box-shadow 0.13s, background 0.12s;
      box-shadow: 0 1.5px 3.5px 0 rgba(40,140,90,0.07);
      outline: none;
      color: white;
    }
    .btn-view {
      background-color: #2e7d32;
    }
    .btn-view:hover, .btn-view:focus {
      background-color: #207020;
      box-shadow: 0 2px 7px rgba(46,125,50,0.12);
    }
    .btn-download {
      background-color: #1976d2;
    }
    .btn-download:hover, .btn-download:focus {
      background-color: #155fc0;
      box-shadow: 0 2px 7px rgba(25,118,210,0.1);
    }
    
    /* Modal and other styles omitted for brevity, keep your previous ones unchanged */

  </style>
</head>
<body>
  <div id="app">
    <header>
      <div class="burger-icon" @click="sideMenuOpen = true" title="Open filters" v-show="isMobile">
        <div></div>
        <div></div>
        <div></div>
      </div>
      Railway Crew Resource Hub
    </header>
    <main>
      <!-- Desktop sidebar -->
      <aside class="sidebar-desktop" v-show="!isMobile">
        <h3>File Types</h3>
        <ul>
          <li :class="{ active: selectedCategory === 'All' }" @click="selectCategory('All')">All</li>
          <li v-for="cat in categories" :key="cat" :class="{ active: selectedCategory === cat }" @click="selectCategory(cat)">
            {{ cat.charAt(0).toUpperCase() + cat.slice(1) }}
          </li>
        </ul>
      </aside>

      <section class="content-area">
        <div class="search-area">
          <form class="enhanced-search" @submit.prevent>
            <span class="search-icon">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none">
                <circle cx="11" cy="11" r="7" stroke="#2e7d32" stroke-width="2"/>
                <path d="M20 20L17 17" stroke="#2e7d32" stroke-width="2" stroke-linecap="round"/>
              </svg>
            </span>
            <input v-model="searchText" type="search" placeholder="Search files, descriptions, or types..." autocomplete="off" />
          </form>
        </div>

        <div v-if="filteredFiles.length === 0" style="margin:2rem auto; text-align:center; color:#8e9ea6; font-size:1.23em;">
          No files found.
        </div>
        <div v-for="file in filteredFiles" :key="file.file" :class="['card', 'card-' + file.type]">
          <div class="thumbnail-container">
            <template v-if="file.type === 'pdf'">
              <img v-if="file.pdfThumbnail" :src="file.pdfThumbnail" alt="PDF Thumbnail" />
              <div v-else-if="file.loadingThumbnail" class="loading-thumbnail">Loading PDF...</div>
              <img v-else :src="file.thumbnail" alt="Default PDF Thumbnail" :class="{ 'thumbnail-loading': file.thumbnailGenerationStarted }" />
            </template>
            <img v-else :src="file.thumbnail" alt="Thumbnail" />
          </div>
          <div class="card-content">
            <h4 :title="file.title">{{ file.title }}</h4>
            <div class="actions">
              <button class="btn btn-view" @click="viewFile(file)">👁️ View</button>
              <button class="btn btn-download" @click="downloadFile(file)">📥 Download</button>
            </div>
          </div>
        </div>
      </section>
    </main>

    <!-- Mobile side menu overlay and tray -->
    <div v-if="sideMenuOpen" class="mobile-overlay" @click="sideMenuOpen = false"></div>
    <nav :class="['mobile-side-tray', {open: sideMenuOpen}]">
      <h3>File Types</h3>
      <ul>
        <li :class="{ active: selectedCategory === 'All' }" @click="selectCategory('All'); sideMenuOpen = false">All</li>
        <li v-for="cat in categories" :key="cat" :class="{ active: selectedCategory === cat }" @click="selectCategory(cat); sideMenuOpen = false">
          {{ cat.charAt(0).toUpperCase() + cat.slice(1) }}
        </li>
      </ul>
    </nav>

    <!-- Modal code unchanged -->
    <div v-if="viewingFile" class="modal-overlay" @click="closeModal">
      <div class="modal-content" @click.stop>
        <div class="modal-header">
          <span>{{ viewingFile.title }}</span>
          <button class="close-btn" @click="closeModal">&times;</button>
        </div>
        <div class="modal-body">
          <!-- Your existing modal content here -->
          <!-- For brevity, omitted -->
        </div>
      </div>
    </div>
  </div>
  <script>
    const { createApp } = Vue;
    createApp({
      data() {
        return {
          files: [],
          selectedCategory: 'All',
          searchText: '',
          processedPdfs: new Set(),
          viewingFile: null,
          sideMenuOpen: false,
          isMobile: false,
        };
      },
      computed: {
        categories() {
          return [...new Set(this.files.map(f => f.category))].sort();
        },
        filteredFiles() {
          return this.files.filter(f => {
            const matchesCategory = this.selectedCategory === 'All' || f.category === this.selectedCategory;
            const matchesSearch = f.title.toLowerCase().includes(this.searchText.toLowerCase());
            return matchesCategory && matchesSearch;
          });
        }
      },
      methods: {
        selectCategory(cat) {
          this.selectedCategory = cat;
        },
        async loadFiles() {
          try {
            const res = await fetch('data/docs.json');
            this.files = await res.json();
          } catch (err) {
            console.error('Could not load docs.json:', err);
          }
        },
        viewFile(file) {
          this.viewingFile = file;
          document.body.style.overflow = 'hidden';
        },
        downloadFile(file) {
          const a = document.createElement('a');
          a.href = file.file;
          a.download = file.file.split('/').pop();
          a.style.display = 'none';
          document.body.appendChild(a);
          a.click();
          document.body.removeChild(a);
        },
        closeModal() {
          this.viewingFile = null;
          document.body.style.overflow = '';
        },
        handleResize() {
          this.isMobile = window.innerWidth < 800;
          if(!this.isMobile) this.sideMenuOpen = false; /* close mobile menu if switching to desktop */
        }
      },
      mounted() {
        this.loadFiles();
        this.handleResize();
        window.addEventListener('resize', this.handleResize);
        document.addEventListener('keydown', e => {
          if (e.key === 'Escape' && this.viewingFile) {
            this.closeModal();
          }
          if(e.key === 'Escape' && this.sideMenuOpen) {
            this.sideMenuOpen = false;
          }
        });
      },
      beforeUnmount() {
        window.removeEventListener('resize', this.handleResize);
      }
    }).mount('#app');
  </script>
  <style>
    /* Mobile side menu styles */
    .mobile-side-tray {
      position: fixed;
      top: 0; left: 0;
      width: 55vw;
      max-width: 300px;
      height: 100vh;
      background: white;
      box-shadow: 3px 0 20px rgba(0,0,0,0.15);
      transform: translateX(-100%);
      transition: transform 0.3s ease;
      z-index: 1300;
      padding: 1rem;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      -webkit-overflow-scrolling: touch;
    }
    .mobile-side-tray.open {
      transform: translateX(0);
    }
    /* Overlay behind side menu */
    .mobile-overlay {
      position: fixed;
      top: 0; left: 0;
      width: 100vw;
      height: 100vh;
      background: rgba(0,0,0,0.3);
      z-index: 1299;
    }
  </style>
</body>
</html>
